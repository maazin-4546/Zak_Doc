        const userPrompt = `You are an expert in document data extraction. Extract only the relevant fields from this invoice document and return a **valid JSON object**. The user may upload either a **multi-page PDF** or an **image (JPG, PNG, etc.)**, so ensure proper extraction of all details from the entire document.

        The invoice may be in **English, French, or Arabic**. Extract the required details accurately, regardless of the language, and always return them in **English** while preserving the correct numerical values.

        1Ô∏è‚É£ **General Fields**:
        - "invoice_number": The unique identifier assigned to the invoice or bill. This can be labeled as "Invoice Number," "Bill Number," "Receipt Number," or similar terms in **English ("Invoice No."), French ("Num√©ro de facture"), or Arabic ("ÿ±ŸÇŸÖ ÿßŸÑŸÅÿßÿ™Ÿàÿ±ÿ©")**. It is typically found at the top of the invoice or near billing details.
        - "date": The official invoice date when the bill was issued. This should strictly refer to the "Invoice Date" and should not be confused with "Order Date," "Shipping Date," or "Due Date." The label may be in **English ("Invoice Date"), French ("Date de facture"), or Arabic ("ÿ™ÿßÿ±ŸäÿÆ ÿßŸÑŸÅÿßÿ™Ÿàÿ±ÿ©")**. It can appear in formats like **DD/MM/YYYY, MM/DD/YYYY**, or other standard date formats.
        - "company_name": The name of the business or entity that issued the bill. This is the **billing company** and not the vendor (seller) or customer. It may be labeled in **English ("Company Name"), French ("Nom de l'entreprise"), or Arabic ("ÿßÿ≥ŸÖ ÿßŸÑÿ¥ÿ±ŸÉÿ©")**. It is usually found in the header section near the company's address and logo.
        - "vendor_name": The name of the individual or business purchasing the product or service. This may be labeled as **"Customer Name" (English), "Nom du client" (French), or "ÿßÿ≥ŸÖ ÿßŸÑÿπŸÖŸäŸÑ" (Arabic)**. It refers to the entity responsible for the payment and is usually located in the billing section of the invoice.
        - "tax_amount": The total tax applied to the invoice. This may be labeled as **"Tax Amount" (English), "Montant de la taxe" (French), or "ŸÖÿ®ŸÑÿ∫ ÿßŸÑÿ∂ÿ±Ÿäÿ®ÿ©" (Arabic)**. It can appear under multiple labels such as "GST," "VAT," "SGST," "CGST," or "Taxable Amount." If multiple tax types are present, extract them separately with corresponding labels (e.g., **SGST: 9%, CGST: 9%**).
        - "total": The final amount payable by the customer after adding all product prices and applicable taxes. This is often labeled as **"Grand Total" (English), "Montant total" (French), or "ÿßŸÑŸÖÿ®ŸÑÿ∫ ÿßŸÑÿ•ÿ¨ŸÖÿßŸÑŸä" (Arabic)**. It is usually found at the bottom of the invoice in a bold or highlighted format.
        
        2Ô∏è‚É£ **Products Section**:
        - "products": A list of objects, each containing:
            - "product_name": The **exact product or service name** as mentioned on the invoice. It can be labeled as **"Item Name," "Product," "Service," "Description," or "Details."**  
              - **If a number appears at the end of a product name, do not treat it as a quantity.** It should be part of the product name unless explicitly listed in the "Quantity" column.
              - Example: "Service or Product Description 5" should be extracted as "Service or Product Description 5", and **not** as a product name "Service or Product Description" with quantity 5.  
            - "quantity": Extract the **number of units purchased** only from the **"Quantity" column.**  
              - **Do not infer quantity from product names.**  
              - Look for labels like **"Qty," "Quantity," "Units," "QTY," or similar terms.** In French, this may be **"Quantit√©," "Unit√©," or "Qt√©"**, and in Arabic, **"ÿßŸÑŸÉŸÖŸäÿ©" or "ÿπÿØÿØ ÿßŸÑŸàÿ≠ÿØÿßÿ™"**.  
              - If no quantity is explicitly provided, return **null**.  
            - "unit_amount": The **price per unit of the product/service**. Extract from labels such as **"Unit Price," "Rate," "Per Item Cost," or "Price Each."**  
              - In French, this may be **"Prix unitaire"** or **"Tarif"**, and in Arabic **"ÿ≥ÿπÿ± ÿßŸÑŸàÿ≠ÿØÿ©"**.  
              - Ensure **numerical accuracy** and **exclude currency symbols** unless explicitly needed.  
            - "line_total": The **total price per product** (unit_amount √ó quantity). Extract from fields labeled **"Total," "Line Total," "Subtotal," "Amount," or "Price."**  
              - If missing, return **null**.  
            - If the invoice includes **discounts, taxes, or additional charges per product**, extract them as separate fields if present.  
            - **Ensure product listings are extracted from tables, structured item lists, or descriptions.** If a table is split across multiple pages, merge the extracted products into a single list.  
            - **If an invoice contains multiple sections (e.g., Itemized Products, Services, Additional Charges), extract all relevant product/service entries in the same "products" array.**  
            - **Avoid extracting headers, footers, totals, or non-product information.**  
        
        3Ô∏è‚É£ **Multi-Page PDF Handling**:
        - If the uploaded document is a **multi-page PDF**, extract relevant information from **all pages**.
        - Ensure that all fields (including "products") are collected across multiple pages, and **do not miss** any details due to page breaks.
        - Combine extracted details from different pages into a **single structured JSON object**.
        
        4Ô∏è‚É£ **Data Handling**:
        - If a field **does not exist**, return **null**.
        - **Ensure JSON validity**, no Markdown formatting.
        - Return data in **proper JSON format**, enclosed in curly braces { }.
        - If multiple products exist, return all in the "products" array.
        - Do **not** return unnecessary details.
        
        üöÄ **Expected Output Example:**
        {
            "invoice_number": "INV-12345",
            "date": "2024-02-20",
            "company_name": "Saffron Design",
            "vendor_name": "Priya Chopra",
            "tax_amount": 1469.52,
            "total": 13715.52,
            "products": [
                { "product_name": "Frontend design restructure", "quantity": 1, "unit_amount": 9999 },
                { "product_name": "Backend API setup", "quantity": 2, "unit_amount": 3000 }
            ]
        }
        
        Return only JSON output with no explanations or additional text.`;




-------------------------------------------------------------------------------------------------------------



const userPrompt = `You are an expert in document data extraction. Extract only the relevant fields from this invoice document and return a **valid JSON object**. The user may upload either a **multi-page PDF** or an **image (JPG, PNG, etc.)**, so ensure proper extraction of all details from the entire document.

The invoice may be in **English, French, or Arabic**. Extract the required details accurately, regardless of the language, and always return them in **English** while preserving the correct numerical values.

üöÄ **Important Fixes for Arabic, French & English Extraction:**  
‚úî Ensure **Company Name** and **Vendor Name** are **not swapped**. Use context-based extraction:  
  - **Company Name**: Typically appears **at the top**, near the logo/header, or in sections labeled as **"Company Name" (EN), "Nom de l'entreprise" (FR), "ÿßÿ≥ŸÖ ÿßŸÑÿ¥ÿ±ŸÉÿ©" (AR)**.  
  - **Vendor Name**: Found in **billing sections**, under "Customer Name," "Billed To," or similar labels: **"Nom du client" (FR), "ÿßÿ≥ŸÖ ÿßŸÑÿπŸÖŸäŸÑ" (AR)**.  
‚úî **Invoice Number** detection improved by verifying it follows common formats (e.g., "INV-XXXX", "FAC-XXXX", numerical sequences).  
‚úî Ensure **currency is extracted correctly** alongside amounts without confusion.  
‚úî Fix **Arabic text mirroring issues** by handling right-to-left (RTL) text properly.

---

### 1Ô∏è‚É£ **General Fields**
- **"invoice_number"**: Extract the invoice number **only if labeled correctly**, ensuring it follows typical patterns such as:
  - **English**: "Invoice No.", "Bill No.", "Receipt No."
  - **French**: "Num√©ro de facture", "Facture No."
  - **Arabic**: "ÿ±ŸÇŸÖ ÿßŸÑŸÅÿßÿ™Ÿàÿ±ÿ©"
  - **Avoid extracting order numbers, shipment numbers, or unrelated numeric strings.**
  
- **"date"**: Extract the invoice date, ensuring it is labeled as:
  - **English**: "Invoice Date"
  - **French**: "Date de facture"
  - **Arabic**: "ÿ™ÿßÿ±ŸäÿÆ ÿßŸÑŸÅÿßÿ™Ÿàÿ±ÿ©"
  - Ignore unrelated dates like "Shipping Date" or "Due Date."

- **"company_name"**: Extract the business/entity issuing the invoice:
  - Usually appears **at the top** of the document.
  - Ignore vendor/customer details in this field.

- **"vendor_name"**: Extract the buyer/customer name:
  - Usually appears in sections labeled as **"Billed To," "Customer Name," "Sold To."**
  - Ignore company details in this field.

---

### 2Ô∏è‚É£ **Amount-Related Fields (Flexible Tax Handling)**
- **"tax_amount"**: Extract all applicable taxes.
  - **If a single tax exists**, return it as a **string** (e.g., "‚Çπ2,974.27").
  - **If multiple tax types exist**, return them as a **structured string** by concatenating tax types with their values, ensuring JSON validity.
  - **Example Outputs:**
    ```json
    "tax_amount": "‚Çπ2,974.27"
    ```
    OR  
    ```json
    "tax_amount": "CGST: ‚Çπ117.40, SGST: ‚Çπ117.40, IGST: ‚Çπ0.00"
    ```
  - **Ensure flexibility in data types** to avoid validation errors.

- **"total"**: The **final amount** payable, including tax.
  - **Ensure the amount includes the correct currency.**
  - **Example Output:**  
    ```json
    "total": "‚Çπ13715.52"
    ```

---

### 3Ô∏è‚É£ **Products Section**
- **"products"**: Extract all items with:
  - **"product_name"**: Preserve exact item descriptions.
  - **"quantity"**: Extract only the **numeric value** from the quantity field. If the quantity contains units (e.g., "12 Nos", "15 Pcs"), remove non-numeric characters and return only the number.
  - **Example Outputs:**
    ```json
    "quantity": 12
    ```
    ```json
    "quantity": 15
    ```
  - **"unit_amount"**: Ensure amount **includes currency**.
  - **Example Output:**
    ```json
    "unit_amount": "$9999"
    ```
    
---

### 4Ô∏è‚É£ **Multi-Page PDF Handling**
- If the document is a **multi-page PDF**, extract details **across all pages**.
- Ensure the output remains **consistent and structured**.

---

### 5Ô∏è‚É£ **Data Handling**
‚úî **Avoid Field Swapping**: Ensure company/vendor names are extracted correctly.  
‚úî **Prevent Incorrect Invoice Number Extraction**: Verify labels and formats.  
‚úî **Fix Arabic Mirroring Issues**: Handle RTL text properly.  
‚úî **Ensure JSON Validity**: No markdown, return only structured JSON.  
‚úî **Flexible Tax Handling**: Convert multi-tax objects into a structured string format to prevent validation errors.
‚úî **Ensure Numeric Quantity Extraction**: Convert quantity values to **numbers only** by removing unit labels like "Nos", "Pcs", etc.

üöÄ **Expected Output Example:**
```json
{
    "invoice_number": "INV-12345",
    "date": "2024-02-20",
    "company_name": "Saffron Design",
    "vendor_name": "Priya Chopra",
    "tax_amount": "CGST: ‚Çπ117.40, SGST: ‚Çπ117.40, IGST: ‚Çπ0.00",
    "total": "‚Çπ13715.52",
    "products": [
        { "product_name": "Frontend design restructure", "quantity": 12, "unit_amount": "$9999" },
        { "product_name": "Backend API setup", "quantity": 15, "unit_amount": "‚Ç¨3000" }
    ]
}
```

Return **only JSON output**, with no explanations or additional text.`;
